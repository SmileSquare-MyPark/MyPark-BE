plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.cloud.tools.jib' version '3.4.4'
}

group = 'com.smile'
version = '0.0.1-SNAPSHOT'
description = 'mypark'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'   //Swagger
	implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // OAuth2

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// CoolSMS
	implementation 'net.nurigo:sdk:4.3.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

jib {
	from {
		image = 'openjdk:17'
		platforms {
			platform {
				architecture = 'amd64'
				os = 'linux'
			}
		}
	}
	to {
		image = 'hangunhee39/mypark:latest'
	}
	container {
		environment = [ 'TZ': 'Asia/Seoul' ]
		jvmFlags = ['-Duser.timezone=Asia/Seoul']
	}
}